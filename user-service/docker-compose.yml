services:
  user-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGO_URI=mongodb://user_db:27017/user_db
    depends_on:
      user_db:
        condition: service_healthy
    networks:
      - blog-network
    healthcheck:
      test: [
        "CMD-SHELL",
        "powershell -command \"try { $response = Invoke-WebRequest http://localhost:3001/health -UseBasicParsing -TimeoutSec 3; if ($response.StatusCode -eq 200) { exit 0 } else { exit 1 } } catch { exit 1 }\""
      ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  user_db:
    image: mongo:5.0
    container_name: user_db
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=user_db
    volumes:
      - user-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - blog-network
    healthcheck:
      test: [
        "CMD-SHELL",
        "echo 'db.runCommand(\"ping\").ok' | mongosh --quiet localhost:27017/user_db | grep 1"
      ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  blog-network:
    driver: bridge
    name: blog-network

volumes:
  user-data: